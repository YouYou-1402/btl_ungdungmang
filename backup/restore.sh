#!/bin/bash

# Ki·ªÉm tra tham s·ªë
if [ $# -ne 2 ]; then
    echo "Usage: $0 <mysql_backup_file> <wordpress_backup_file>"
    echo "Example: $0 mysql_backup_20231213_140000.sql.gz wordpress_files_20231213_140000.tar.gz"
    exit 1
fi

MYSQL_BACKUP=$1
WORDPRESS_BACKUP=$2
NAMESPACE="wordpress"
BACKUP_DIR="/tmp/wordpress-backups"

# Ki·ªÉm tra files t·ªìn t·∫°i
if [ ! -f "$BACKUP_DIR/$MYSQL_BACKUP" ]; then
    echo "‚ùå MySQL backup file not found: $BACKUP_DIR/$MYSQL_BACKUP"
    exit 1
fi

if [ ! -f "$BACKUP_DIR/$WORDPRESS_BACKUP" ]; then
    echo "‚ùå WordPress backup file not found: $BACKUP_DIR/$WORDPRESS_BACKUP"
    exit 1
fi

echo "üîÑ Starting restore process..."

# Restore MySQL
echo "üìä Restoring MySQL database..."
MYSQL_POD=$(kubectl get pods -n $NAMESPACE -l app=mysql -o jsonpath='{.items[0].metadata.name}')

if [[ $MYSQL_BACKUP == *.gz ]]; then
    # Gi·∫£i n√©n v√† restore
    gunzip -c $BACKUP_DIR/$MYSQL_BACKUP | kubectl exec -i -n $NAMESPACE $MYSQL_POD -- mysql -u root -prootpassword123 wordpress
else
    # Restore tr·ª±c ti·∫øp
    kubectl exec -i -n $NAMESPACE $MYSQL_POD -- mysql -u root -prootpassword123 wordpress < $BACKUP_DIR/$MYSQL_BACKUP
fi

if [ $? -eq 0 ]; then
    echo "‚úÖ MySQL restore completed"
else
    echo "‚ùå MySQL restore failed!"
    exit 1
fi

# Restore WordPress files
echo "üìÅ Restoring WordPress files..."
WORDPRESS_POD=$(kubectl get pods -n $NAMESPACE -l app=wordpress -o jsonpath='{.items[0].metadata.name}')

kubectl exec -i -n $NAMESPACE $WORDPRESS_POD -- tar xzf - -C /var/www/html < $BACKUP_DIR/$WORDPRESS_BACKUP

if [ $? -eq 0 ]; then
    echo "‚úÖ WordPress files restore completed"
else
    echo "‚ùå WordPress files restore failed!"
    exit 1
fi

# Restart WordPress pod ƒë·ªÉ √°p d·ª•ng thay ƒë·ªïi
echo "üîÑ Restarting WordPress pod..."
kubectl delete pod -n $NAMESPACE -l app=wordpress
kubectl wait --for=condition=ready pod -l app=wordpress -n $NAMESPACE --timeout=300s

echo "‚úÖ Restore process completed successfully!"
